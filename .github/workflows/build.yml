name: Build

on:
  push:
    branches:
      - main
      - pv/mac
  pull_request:
    branches:
      - main
    types:
      - ready_for_review
  workflow_dispatch:

jobs:
  # flatpak:
  #   name: Flatpak
  #   runs-on: ubuntu-24.04
  #   container:
  #     image: bilelmoussaoui/flatpak-github-actions:gnome-47
  #     options: --privileged
  #   strategy:
  #     matrix:
  #       arch:
  #         - x86_64
  #         - aarch64
  #     # Don't fail the whole workflow if one architecture fails
  #     fail-fast: false
  #   steps:
  #     - uses: actions/checkout@v4
  #     # Install docker for ARM64 builds
  #     - name: Install deps
  #       if: ${{ matrix.arch != 'x86_64' }}
  #       run: |
  #         dnf -y install docker
  #     # Set up QEMU for ARM64 builds
  #     - name: Set up QEMU
  #       if: ${{ matrix.arch != 'x86_64' }}
  #       id: qemu
  #       uses: docker/setup-qemu-action@v2
  #       with:
  #         platforms: arm64
  #     - uses: flatpak/flatpak-github-actions/flatpak-builder@v6
  #       with:
  #         bundle: aardvark.flatpak
  #         manifest-path: org.p2panda.aardvark.json
  #         cache-key: flatpak-builder-${{ github.sha }}
  #         arch: ${{ matrix.arch }}

  # The above job will build the application as a flatpack and
  # publish it as an artifact. To test it locally you can download
  # the zip artifact, extract it, install the flatpack and run it.
  # unzip aardvark-x86_64.zip
  # flatpak --user install aardvark.flatpak
  # flatpak run org.p2panda.aardvark

  macos:
    name: macOS (${{ matrix.arch }})
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-apple-darwin
            arch: x86_64
          # - target: aarch64-apple-darwin
          #   arch: arm64
    steps:
      - uses: actions/checkout@v4
      - uses: moonrepo/setup-rust@v1
        with:
          targets: ${{ matrix.target }}
          channel: nightly
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Cache Homebrew packages
      - uses: actions/cache@v4
        with:
          path: |
            ~/Library/Caches/Homebrew
            /usr/local/Homebrew
            # FIXME: Cache action is not allowed to cache x86_64 Homebrew directory
            # /opt/homebrew
          key: ${{ runner.os }}-${{ matrix.arch }}-brew-${{ hashFiles('**/Brewfile', '.github/workflows/build.yml') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.arch }}-brew-

      - name: Setup x86_64 Homebrew
        if: matrix.arch == 'x86_64'
        run: |
          HOMEBREW_PREFIX="/usr/local"
          sudo mkdir -p /usr/local
          sudo chown -R $(whoami) /usr/local
          arch -x86_64 /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

      - name: Run macOS Build Script
        run: |
          chmod +x scripts/build_macos.sh
          ./scripts/build_macos.sh --release --app-bundle --dmg ${{ matrix.arch == 'x86_64' && '--arch x86_64' || '' }}
        env:
          PKG_CONFIG_ALLOW_CROSS: "1"
          MACOSX_DEPLOYMENT_TARGET: "10.15"
          HOMEBREW_PREFIX: "${{ matrix.arch == 'x86_64' && '/usr/local' || '/opt/homebrew' }}"
          PKG_CONFIG_PATH: "${{ matrix.arch == 'x86_64' && '/usr/local/lib/pkgconfig' || '/opt/homebrew/lib/pkgconfig' }}"

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          # Build script creates artifacts in the current directory
          name: aardvark-macos-${{ matrix.arch }}
          path: aardvark-${{ matrix.arch }}.dmg

      - name: Smoke test the artifact
        env:
          RUST_BACKTRACE: "full"
          RUST_LOG: "debug"
          G_MESSAGES_DEBUG: "all"
        run: |
          ./Aardvark.app/Contents/MacOS/aardvark &
          PID=$!
          sleep 5
          echo Killing aardvark
          kill $PID || true
